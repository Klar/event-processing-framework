---
# vim: foldmarker=[[[,]]]:foldmethod=marker

# SPDX-FileCopyrightText: 2023 Robin Schneider <ro.schneider@senec.com>
#
# SPDX-License-Identifier: AGPL-3.0-only

transforms:
  transform_module_docker:
    type: remap
    inputs:
      - 'transform_route_to_module.docker'
    source: |-
      .ecs.version = "1.12.0"
      .event.module = "docker"

      if (!exists(.__)) {
        # Module called from isolated unit test.
        .__.parse_failures_short = []
        .__.parse_failures = []
        .__.parse_warnings_short = []
        .__.parse_warnings = []
      }

      if ((string(.event.dataset) ?? "other.other") == "docker.container_logs") {
        .container.name = del(.CONTAINER_NAME)
        .container.id = del(.CONTAINER_ID_FULL)
        .container.image.name = del(.IMAGE_NAME)

        del(.CONTAINER_TAG)
        del(.CONTAINER_ID)
        del(.CONTAINER_LOG_EPOCH)
        del(.CONTAINER_LOG_ORDINAL)

        .container.labels = {}
        # Docker is bad in how it writes labels to journald.
        # Podman does a much better job: "PODMAN_LABELS": "{\"com.test\":\"test\"}"
        # But we cannot improve/configure the situation for Docker easily, so
        # the following code is needed:
        for_each(keys(.)) -> |_index, root_key| {
          # Check if the key is all upper case -> User journald field.
          if (match(root_key, r'^[A-Z][A-Z_]*$')) {
            .container.labels = set!(
              value: .container.labels,
              path: [downcase(root_key)],
              data: get!(., path: [root_key]))
            . = remove!(., path: [root_key])
          }
        }
      }
