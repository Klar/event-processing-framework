json = [];
json[0] = {};
json[0].__ = {};
json[0].__._id = "v5_c41855edc48aec05e8c044e";
json[0].__._index_name = "log_other__v1";
json[0].__.drop_given_domains_from_hostname = ".example.net";
json[0].__.enabled_postprocessors = {};
json[0].__.enabled_postprocessors["file path sanitation"] = {};
json[0].__.enabled_postprocessors["file path sanitation"]["log.file.path"] = true;
json[0].__.enabled_postprocessors["host name QA"] = {};
json[0].__.enabled_postprocessors["host name QA"]["host.name"] = true;
json[0].__.enabled_postprocessors["host name QA"]["observer.host.name"] = true;
json[0].__.enabled_postprocessors["host name sanitation"] = {};
json[0].__.enabled_postprocessors["host name sanitation"]["host.name"] = true;
json[0].__.enabled_postprocessors["host name sanitation"]["observer.host.name"] = true;
json[0].__.enabled_postprocessors["host.name missing"] = {};
json[0].__.enabled_postprocessors["timestamp QA"] = {};
json[0].__.enabled_postprocessors["timestamp QA"]["@timestamp"] = "10 m";
json[0].__.enabled_preprocessors = {};
json[0].__.enabled_preprocessors.syslog = true;
json[0].__.enabled_preprocessors.syslog_lax = true;
json[0].__.enabled_preprocessors.syslog_minimal = true;
json[0].__.enabled_preprocessors["decode inner json"] = true;
json[0].__.enabled_preprocessors["decode outer json"] = true;
json[0].__.event = {};
json[0].__.event.hash = "c41855edc48aec05e8c044e2a795a3bac8947f0368f6a0ac159a3292558de364";
json[0].__.event.original = {};
json[0].__.event.original.message = "{\"@timestamp\":\"2021-07-07T17:46:29.260073+02:00\",\"event\":{\"sequence\":58128909097634936},\"message\":\"<139>date=2021-09-30 time=17:33:00 hostname=\\\"myhostname\\\"\"}";
json[0].__.fingerprint_inputs = [];
json[0].__.fingerprint_inputs[0] = "<139>date=2021-09-30 time=17:33:00 hostname=\"myhostname\"";
json[0].__.fingerprint_inputs[1] = "N5ZNMjIfnJcn4y5K1OK7T7u03CKKLd";
json[0].__.hmac_secret_key = "xxx Sanitized the secret key in integration test output. Note that the _id in the output is still generated on the unmodified secret.";
json[0].__.parse_failures = [];
json[0].__.parse_failures_short = [];
json[0].__.parse_warnings = [];
json[0].__.parse_warnings[0] = "parse_warning: host.name QA: host.name field is untrusted because host.name_rdns is not available for cross checking.";
json[0].__.parse_warnings[1] = "parse_warning";
json[0].__.parse_warnings_short = [];
json[0].__.parse_warnings_short[0] = "parse_warning: host.name QA";
json[0].__.preprocessor_success = {};
json[0].__.preprocessor_success.syslog_minimal = true;
json[0].__.trusted_input = true;
json[0].__["required_field_missing_ecs.version"] = true;
json[0].__["required_field_missing_event.kind"] = true;
json[0].agent = {};
json[0].agent.name = [];
json[0].agent.name[0] = "fixed-test-host-name";
json[0].event = {};
json[0].event.dataset = "other.other";
json[0].event.module = "other";
json[0].event.original = "<139>date=2021-09-30 time=17:33:00 hostname=\"myhostname\"";
json[0].event.sequence = 58128909097634936;
json[0].event.severity = 3;
json[0].host = {};
json[0].host.name = "Replaced hostname of test machine with this sentence in test mode.";
json[0].log = {};
json[0].log.flags = [];
json[0].log.flags[0] = "parse_warning: host.name QA: host.name field is untrusted because host.name_rdns is not available for cross checking.";
json[0].log.flags[1] = "parse_warning";
json[0].log.level = "err";
json[0].log.syslog = {};
json[0].log.syslog.facility = {};
json[0].log.syslog.facility.name = "local1";
json[0].message = "date=2021-09-30 time=17:33:00 hostname=\"myhostname\"";
json[0].tags = [];
json[0].tags[0] = "parse_success: Syslog priority";
json[0].tags[1] = "parse_warning: host.name QA";
json[0]["@timestamp"] = "2021-07-07T17:46:29.260073+02:00";
