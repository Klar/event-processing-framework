json = [];
json[0] = {};
json[0].__ = {};
json[0].__._id = "v5_263a94706a6f33c33a9a467";
json[0].__._index_name = "log_other__v1";
json[0].__.drop_given_domains_from_hostname = ".example.net";
json[0].__.enabled_postprocessors = {};
json[0].__.enabled_postprocessors["file path sanitation"] = {};
json[0].__.enabled_postprocessors["file path sanitation"]["log.file.path"] = true;
json[0].__.enabled_postprocessors["host name QA"] = {};
json[0].__.enabled_postprocessors["host name QA"]["host.name"] = true;
json[0].__.enabled_postprocessors["host name QA"]["observer.host.name"] = true;
json[0].__.enabled_postprocessors["host name sanitation"] = {};
json[0].__.enabled_postprocessors["host name sanitation"]["host.name"] = true;
json[0].__.enabled_postprocessors["host name sanitation"]["observer.host.name"] = true;
json[0].__.enabled_postprocessors["timestamp QA"] = {};
json[0].__.enabled_postprocessors["timestamp QA"]["@timestamp"] = "10 m";
json[0].__.enabled_preprocessors = {};
json[0].__.enabled_preprocessors.syslog_lax = false;
json[0].__.enabled_preprocessors["decode outer json"] = true;
json[0].__.event = {};
json[0].__.event.hash = "263a94706a6f33c33a9a467e1ac43a9230e975d061929493bb89f7ab049bbb56";
json[0].__.event.original = "{\"@timestamp\":\"2023-05-24T19:56:14.334933783Z\",\"event\":{\"dataset\":\"vector.internal_logs\",\"module\":\"vector\"},\"host\":{\"name\":\"mypodname\"},\"message\":\"Healthcheck: Passed.\",\"metadata\":{\"kind\":\"event\",\"level\":\"INFO\",\"module_path\":\"vector::topology::builder\",\"target\":\"vector::topology::builder\"},\"process\":{\"pid\":1},\"source_type\":\"internal_logs\",\"timestamp\":\"2023-05-24T19:56:14.334869050Z\"}";
json[0].__.fingerprint_inputs = [];
json[0].__.fingerprint_inputs[0] = "{\"@timestamp\":\"2023-05-24T19:56:14.334933783Z\",\"event\":{\"dataset\":\"vector.internal_logs\",\"module\":\"vector\"},\"host\":{\"name\":\"mypodname\"},\"message\":\"Healthcheck: Passed.\",\"metadata\":{\"kind\":\"event\",\"level\":\"INFO\",\"module_path\":\"vector::topology::builder\",\"target\":\"vector::topology::builder\"},\"process\":{\"pid\":1},\"source_type\":\"internal_logs\",\"timestamp\":\"2023-05-24T19:56:14.334869050Z\"}";
json[0].__.fingerprint_inputs[1] = "N5ZNMjIfnJcn4y5K1OK7T7u03CKKLd";
json[0].__.hmac_secret_key = "N5ZNMjIfnJcn4y5K1OK7T7u03CKKLd";
json[0].__.parse_warnings = [];
json[0].__.parse_warnings[0] = "parse_warning: host.name QA. host.name field is untrusted because host.name_rdns is not available for cross checking.";
json[0].__.parse_warnings[1] = "parse_warning";
json[0].__.parse_warnings_short = [];
json[0].__.parse_warnings_short[0] = "parse_warning: host.name QA";
json[0].__.source_type = "kafka";
json[0].__["@timestamp"] = "Replaced timestamp with this sentence in test mode.";
json[0].agent = {};
json[0].agent.name = [];
json[0].agent.name[0] = "fixed-test-host-name";
json[0].ecs = {};
json[0].ecs.version = "1.12.0";
json[0].event = {};
json[0].event.created = "2023-05-24T19:56:14.334Z";
json[0].event.dataset = "vector.internal_logs";
json[0].event.kind = "event";
json[0].event.module = "vector";
json[0].event.original = "{\"@timestamp\":\"2023-05-24T19:56:14.334933783Z\",\"event\":{\"dataset\":\"vector.internal_logs\",\"module\":\"vector\"},\"host\":{\"name\":\"mypodname\"},\"message\":\"Healthcheck: Passed.\",\"metadata\":{\"kind\":\"event\",\"level\":\"INFO\",\"module_path\":\"vector::topology::builder\",\"target\":\"vector::topology::builder\"},\"process\":{\"pid\":1},\"source_type\":\"internal_logs\",\"timestamp\":\"2023-05-24T19:56:14.334869050Z\"}";
json[0].event.sequence = 3882;
json[0].event.severity = 6;
json[0].host = {};
json[0].host.name = "mypodname";
json[0].log = {};
json[0].log.flags = [];
json[0].log.flags[0] = "parse_warning: host.name QA. host.name field is untrusted because host.name_rdns is not available for cross checking.";
json[0].log.flags[1] = "parse_warning";
json[0].log.level = "info";
json[0].log.logger = "vector::topology::builder";
json[0].message = "Healthcheck: Passed.";
json[0].process = {};
json[0].process.pid = 1;
json[0].tags = [];
json[0].tags[0] = "parse_warning: host.name QA";
json[0].vector = {};
json[0].vector.internal_logs = {};
json[0].vector.internal_logs.source_type = "internal_logs";
json[0].vector.internal_logs.target = "vector::topology::builder";
json[0].vector.internal_logs["@timestamp"] = "2023-05-24T19:56:14.334933783Z";
json[0]["@timestamp"] = "2023-05-24T19:56:14.334869050Z";
