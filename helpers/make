#!/usr/bin/env bash
# Run tools in Container instead of having to install them locally.

# SPDX-FileCopyrightText: 2024 Robin Schneider <ro.schneider@senec.com>
#
# SPDX-License-Identifier: AGPL-3.0-only

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]
then
    PS4='+ $(date --rfc-3339=seconds), ${BASH_SOURCE-}:${LINENO-}: '
    export PS4
    trap 'echo Unhandled error at ${BASH_SOURCE-}:${LINENO-} caused exit with code $?. >&2' ERR
    set -o nounset -o pipefail -o errexit -o errtrace

    # If we are inside a git submodule, get the root path of the superprojectâ€™s working tree.
    repo_root_dirpath="$(git rev-parse --show-superproject-working-tree)"
    if [[ -z "$repo_root_dirpath" ]]; then
        # If not a git submodule, just get the root directory of the repo.
        repo_root_dirpath="$(git rev-parse --show-toplevel)"
    fi

    mkdir -p "$HOME/.cache/event_processing_framework"

    dir_inside_repo_path="${PWD#"${repo_root_dirpath}"}"
    EVENT_PROCESSING_FRAMEWORK_DOCKER_IMAGE="$(yq '.[".vector_dev_image"] // "'"$EVENT_PROCESSING_FRAMEWORK_DOCKER_IMAGE"'"' "$(git rev-parse --show-toplevel)/.gitlab-ci.yml")"

    docker run --rm -it --platform linux/amd64 --name vector_dev \
        --volume "${repo_root_dirpath}:/workspace" \
        --volume "$HOME/.cache/event_processing_framework:/home/user/.cache/pre-commit" \
        --workdir "/workspace$dir_inside_repo_path" \
        --entrypoint make \
        "${EVENT_PROCESSING_FRAMEWORK_DOCKER_IMAGE}" "$@"
fi
